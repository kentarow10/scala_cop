package basicTypes

object Main extends App {
    // 補数：対象の数に補数を足せば対象の数の桁が一つ上がる最小の数になる
    // 例：123 => 877

    // 補数でマイナスを表すことができる
    // 例：555 - 123 => 555 + (1000 - 123) = 1432
    // 一番大きい桁を最後に排除する
    // 全てのn進数で言える

    // 基本型Byte
    // 2の補数表現の8ビット符号付整数

    // 1の補数：7桁の場合、足して1111111になるような数なので、ビットを反転させたものになる
    // 2の補数：7桁の場合、足して10000000になるような数なので、1の補数に1足したものである

    // Float：32ビットのIEEE754単精度浮動小数点数
    // Double：64ビットのIEEE754倍精度浮動小数点数
    // TODO 後から調べる

    // 文字列の扱い
    println("""| aaaaa   bbbbbbb cc
    | ddddd eeeeefff   ffff |ggg""".stripMargin)

    // 文字列補間子
    // s,raw,f

    // Richラッパーというものが各基本型に備わっていていろんな機能が暗黙的に使える

}